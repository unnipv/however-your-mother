.pageContainer {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem 1rem 3rem 1rem; /* Reduced top and bottom padding */
}

/* Main Two-Column Layout */
.mainColumnsContainer {
  display: grid;
  grid-template-columns: 1fr 2fr; /* Left column 1/3, Right column 2/3. Adjust ratio as needed */
  gap: 2rem; /* Gap between left and right columns */
  margin-top: 2rem;
  margin-bottom: 2.5rem;
  align-items: stretch; /* Ensure columns stretch to the height of the tallest one */
}

.leftColumn {
  display: flex;
  flex-direction: column;
  gap: 1.5rem; /* Gap between joke panel and on-this-day card */
  /* height: 100%; Removed, as align-items:stretch on parent does the job */
}

/* Styling for the containers in the left column */
.jokePanelContainer,
.onThisDayContainer {
  border: 2px solid var(--vintage-brown); /* More prominent border */
  border-radius: 8px;
  background-color: var(--paper-color); /* Slightly different background */
  padding: 1rem;
  display: flex; /* Allow child card to take full height */
  flex-direction: column;
  box-shadow: var(--shadow-strong); /* Add a bit more shadow */
}

.jokePanelContainer {
  flex-shrink: 0; /* Joke panel takes its natural height */
}

.onThisDayContainer {
  flex-grow: 1; /* "On This Day" card takes remaining space */
}

/* Ensure the actual card components within these containers fill them */
.jokePanelContainer > div, /* Targets YourMomJokePanel */
.onThisDayContainer > div, /* Targets OnThisDayMemoryCard or its placeholder */
.onThisDayContainer > a { /* Targets the Link wrapping OnThisDayMemoryCard */
  height: 100%;
  display: flex; /* Added to ensure inner content of card also can use flex properties for 100% height */
  flex-direction: column;
}

/* Specific styling for the placeholder when no "On This Day" memory */
.noOnThisDayPlaceholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  min-height: 200px; /* Adjusted min-height */
  height: 100%; 
  padding: 1rem;
  font-family: var(--font-secondary);
  color: var(--ink-color-medium);
  border: 2px dashed var(--vintage-brown-light); /* Distinct placeholder border */
  border-radius: 6px;
  background-color: var(--paper-color-extralight); /* Lighter background for placeholder */
}

.noOnThisDayPlaceholder p {
  margin-bottom: 1.5rem;
  font-size: 1.1rem;
}

.rightColumn {
  display: flex;
  flex-direction: column; /* In case we want a title above the grid here */
}

.memoriesGridRight {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* 2x2 grid for memories */
  gap: 1.5rem;
  flex-grow: 1; /* Allow grid to take available space in right column */
}

/* Make MemoryCard instances fill their grid cells in .memoriesGridRight */
.memoriesGridRight > div { /* Assuming MemoryCard is wrapped in a div by page.tsx, or direct MemoryCard style */
  height: 100%; /* This relies on MemoryCard.module.css also setting height: 100% */
}

.noMemoriesMessageRightCol {
  font-family: var(--font-secondary);
  color: var(--ink-color-medium);
  text-align: center;
  padding: 2rem;
  border: 1px dashed var(--vintage-brown-light);
  border-radius: 8px;
  background-color: var(--paper-color-extralight);
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 300px; /* Give it some presence */
  flex-grow: 1; /* Allow it to take space if grid is empty */
}

/* Responsive adjustments for main columns */
@media (max-width: 992px) { /* Tablet and below */
  .mainColumnsContainer {
    grid-template-columns: 1fr; /* Stack columns */
  }
  .rightColumn {
    margin-top: 2rem; /* Add space when stacked */
  }
  .leftColumn {
    /* On smaller screens, let left column items take natural height */
    /* rather than forcing one to grow excessively if content is small */
  }
  .onThisDayContainer {
    flex-grow: 0; /* Stop forcing growth on smaller screens if not needed */
    min-height: 300px; /* Ensure it has some min height still */
  }
}

@media (max-width: 576px) { /* Small mobile */
  .memoriesGridRight {
    grid-template-columns: 1fr; /* Single column for memory cards on very small screens */
  }
}

/* --- Re-usable/General Styles (some might be adjusted or new) --- */

.createOneLink {
  background-color: var(--vintage-green);
  color: var(--paper-color-light);
  /* Inherits .btn from globals.css */
}

.createOneLink:hover {
  background-color: var(--vintage-green-dark);
}

.fetchError {
  color: var(--vintage-red-dark);
  text-align: center;
  font-family: var(--font-secondary);
  margin: 2rem auto;
  background-color: var(--vintage-red-lightest);
  padding: 1rem;
  border-radius: 4px;
  border: 1px solid var(--vintage-red-lighter);
  max-width: 800px;
}

.noMemoriesMessage { /* General message if no memories at all */
  text-align: center;
  font-family: var(--font-secondary);
  color: var(--ink-color-medium);
  margin: 2rem auto;
  padding: 2rem;
  background-color: var(--paper-color-extralight);
  border-radius: 4px;
  max-width: 800px;
  border: 1px dashed var(--vintage-brown-light);
}

.viewAllLinkWrapper {
  margin-top: 2.5rem;
  text-align: center;
}

.viewAllLink {
  border: 1px solid var(--vintage-brown-light); 
  background-color: transparent;
  color: var(--vintage-brown-dark); 
  padding: 0.75rem 1.5rem;
  box-shadow: none;
  transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease;
  /* Inherits .btn from globals.css */
}

.viewAllLink:hover {
  background-color: var(--vintage-brown-lightest);
  color: var(--vintage-brown-darker);
  box-shadow: var(--shadow-subtle);
}

/* Disable old styles */
.homeGridContainer, .gridQuadrant, .noOnThisDayQuadrant, .leftColumnItem {
    display: none; 
} 